"use strict";(self.webpackChunknotion_next=self.webpackChunknotion_next||[]).push([[7994],{47054:(t,n,i)=>{i.d(n,{AD:()=>u});i(57658);var e=i(30120),a=i(59730),o=i(63143);function s(t){if(void 0===t)return e.ou.utc();const n={zone:"utc"};return"number"==typeof t?e.ou.fromMillis(t,n):e.ou.fromISO(t,n)}function r(t,n){const i=n?s(n):e.ou.utc(),o=s(t??function(t){const{days:n,endDate:i,startDate:o}=t;if(n<=0)throw new a.p8("Days must be greater than 0");const r=i?s(i):e.ou.utc();if(!r.isValid)throw new a.p8(`endDate ${i} is in an invalid format`);const u=o?s(o).toMillis():0,f=r.minus({days:n-1}).toMillis();return Math.max(f,u)}({days:7,endDate:n}));if(!o.isValid)throw new a.p8(`startDate ${t} is in an invalid format`);if(!i.isValid)throw new a.p8(`endDate ${n} is in an invalid format`);if(o>i)throw new a.p8(`startDate ${t} => ${o.toISO()} is after endDate ${n} => ${i.toISO()}`);return{startTimestamp:o.toMillis(),endTimestamp:i.toMillis()}}function u(t,n){const{startTimestamp:i,endTimestamp:e}=r(t,n),a=[];for(var u=i;u<=e;)a.push(s(u).toISODate()),u+=o.A0;return a}}}]);